{"version":3,"sources":["webpack:///webpack/bootstrap?7f80","webpack:///external \"express-msteams-host\"?e438","webpack:///external \"botbuilder\"?fa14","webpack:///external \"debug\"?b2c7","webpack:///./src/app/acPrototypeBot/AcPrototypeBot.ts?5403","webpack:///./src/app/server.ts?53c8","webpack:///external \"express\"?22fe","webpack:///external \"http\"?8d19","webpack:///external \"path\"?74bb","webpack:///external \"morgan\"?3206","[]","webpack:///external \"node-fetch\"?5cd5","webpack:///./src/app/acPrototypeBot/dialogs/WelcomeDialog.ts?775e","webpack:///./src/app/acPrototypeBot/dialogs/VideoPlayerCard.ts?d01d","webpack:///external \"botbuilder-teams\"?cb0c","webpack:///./src/app/acPrototypeBot/dialogs/AdminCard.ts?9219","webpack:///./src/app/acPrototypeBot/dialogs/QuickActionsCard.ts?cdac","webpack:///./src/app/acPrototypeBot/dialogs/ManagerDashboard.ts?4e72","webpack:///./src/app/acPrototypeBot/dialogs/interviewCandidates.ts?fa00","webpack:///./src/app/acPrototypeBot/dialogs/SuccessCard.ts?2dbf","webpack:///external \"dotenv\"?e70f","webpack:///./src/app/TeamsAppsComponents.ts?b0db"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","require","log","debug","AcPrototypeBot","memoryStorage","conversationState","activityProc","TeamsActivityProcessor","loggedInMemberOIDs","Map","this","invokeActivityHandler","onInvoke","context","ctx","activity","state","authCode","read","set","from","aadObjectId","profile","getUserProfile","tabContext","tabEntityId","status","body","tab","type","suggestedActions","actions","title","welcomeCard","CardFactory","adaptiveCard","adminCard","quickActionsCard","managerCard","videoPlayerCard","interviewCard","successCard","responseBody","primaryTabResponse","cards","card","content","secondaryTabResponse","primaryTabSubmitResponse","secondaryTabSubmitResponse","task","height","width","processIncomingActivity","authState","response","headers","Authorization","accessToken","json","error","undefined","PreventIframe","config","express","Express","port","process","env","PORT","adapter","BotFrameworkAdapter","appId","MICROSOFT_APP_ID","appPassword","MICROSOFT_APP_PASSWORD","onTurnError","console","sendTraceActivity","sendActivity","delete","MemoryStorage","ConversationState","bot","use","verify","req","res","buf","encoding","rawBody","toString","urlencoded","extended","engine","renderFile","path","join","__dirname","morgan","post","processActivity","onTurn","static","authResponse","Math","random","dir","write","idToken","id_token","access_token","tokenType","token_type","expiresIn","expires_in","scope","render","MsTeamsApiRouter","allComponents","MsTeamsPageRouter","root","components","index","http","createServer","listen","WelcomeCard","VideoPlayerCard","AdminCard","QuickActionCard","bleed","style","items","text","weight","size","columns","url","displayName","wrap","spacing","isSubtle","fontType","separator","$schema","version","InterviewCandidatesCard","SuccessCard","nonce"],"mappings":"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","file":"server.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 4);\n","module.exports = require(\"express-msteams-host\");","module.exports = require(\"botbuilder\");","module.exports = require(\"debug\");","import { BotDeclaration, IBot, PreventIframe } from \"express-msteams-host\";\r\nimport * as debug from \"debug\";\r\nimport {\r\n  CardFactory,\r\n  TurnContext,\r\n  MemoryStorage,\r\n  ConversationState,\r\n  InvokeResponse,\r\n} from \"botbuilder\";\r\nimport fetch from \"node-fetch\";\r\nimport WelcomeCard from \"./dialogs/WelcomeDialog\";\r\nimport VideoPlayerCard from \"./dialogs/VideoPlayerCard\";\r\nimport { TeamsActivityProcessor } from \"botbuilder-teams\";\r\nimport AdminCard from \"./dialogs/AdminCard\";\r\nimport QuickActionCard from \"./dialogs/QuickActionsCard\";\r\nimport ManagerDashboardCard from \"./dialogs/ManagerDashboard\";\r\nimport InterviewCandidatesCard from \"./dialogs/interviewCandidates\";\r\nimport SuccessCard from \"./dialogs/SuccessCard\";\r\n\r\n// Initialize debug logging module\r\nconst log = debug(\"msteams\");\r\n\r\n/**\r\n * Implementation for acPrototype Bot\r\n */\r\n// @BotDeclaration(\r\n//   \"/api/messages\",\r\n//   new MemoryStorage(),\r\n//   process.env.MICROSOFT_APP_ID,\r\n//   process.env.MICROSOFT_APP_PASSWORD\r\n// )\r\n@PreventIframe(\"/acPrototypeBot/acProtoBotTab.html\")\r\nexport class AcPrototypeBot implements IBot {\r\n  private readonly conversationState: ConversationState;\r\n  private readonly activityProc = new TeamsActivityProcessor();\r\n  private loggedInMemberOIDs: Map<string, object> = new Map();\r\n  /**\r\n   * The constructor\r\n   * @param conversationState\r\n   */\r\n  public constructor(\r\n    memoryStorage: MemoryStorage,\r\n    conversationState: ConversationState\r\n  ) {\r\n    this.conversationState = conversationState;\r\n\r\n    // Set up the Activity processing\r\n    this.activityProc.invokeActivityHandler = {\r\n      onInvoke: async (context: TurnContext): Promise<InvokeResponse> => {\r\n        const ctx: any = context;\r\n        // If not logged in\r\n        if (ctx.activity.value.state != null) {\r\n          const authCode = await memoryStorage.read([ctx.activity.value.state]);\r\n          this.loggedInMemberOIDs.set(\r\n            ctx.activity.from.aadObjectId,\r\n            authCode[ctx.activity.value.state]\r\n          );\r\n        }\r\n        const profile = await this.getUserProfile(\r\n          ctx.activity.from.aadObjectId\r\n        );\r\n\r\n        if (\r\n          ctx.activity.value.tabContext.tabEntityId === \"workday\" &&\r\n          !profile\r\n        ) {\r\n          return {\r\n            status: 200,\r\n            body: {\r\n              tab: {\r\n                type: \"auth\",\r\n                suggestedActions: {\r\n                  actions: [\r\n                    {\r\n                      type: \"openUrl\",\r\n                      value:\r\n                        \"https://acprototype.azurewebsites.net/acPrototypeTab/login.html\",\r\n                      title: \"Sign in to this app!\",\r\n                    },\r\n                  ],\r\n                },\r\n              },\r\n            },\r\n          };\r\n        }\r\n\r\n        const welcomeCard = CardFactory.adaptiveCard(WelcomeCard);\r\n        const adminCard = CardFactory.adaptiveCard(AdminCard);\r\n        const quickActionsCard = CardFactory.adaptiveCard(QuickActionCard);\r\n        const managerCard = CardFactory.adaptiveCard(\r\n          ManagerDashboardCard(profile)\r\n        );\r\n        const videoPlayerCard = CardFactory.adaptiveCard(VideoPlayerCard);\r\n        const interviewCard = CardFactory.adaptiveCard(InterviewCandidatesCard);\r\n        const successCard = CardFactory.adaptiveCard(SuccessCard);\r\n        let responseBody: any;\r\n\r\n        const primaryTabResponse: any = {\r\n          tab: {\r\n            type: \"continue\",\r\n            value: {\r\n              cards: [\r\n                { card: quickActionsCard.content },\r\n                { card: managerCard.content },\r\n                { card: adminCard.content },\r\n              ],\r\n            },\r\n          },\r\n        };\r\n\r\n        const secondaryTabResponse: any = {\r\n          tab: {\r\n            type: \"continue\",\r\n            value: {\r\n              cards: [\r\n                { card: welcomeCard.content },\r\n                { card: interviewCard.content },\r\n                { card: videoPlayerCard.content },\r\n              ],\r\n            },\r\n          },\r\n        };\r\n\r\n        const primaryTabSubmitResponse: any = {\r\n          tab: {\r\n            type: \"continue\",\r\n            value: {\r\n              cards: [\r\n                { card: successCard.content },\r\n                { card: quickActionsCard.content },\r\n                { card: managerCard.content },\r\n                { card: adminCard.content },\r\n              ],\r\n            },\r\n          },\r\n        };\r\n\r\n        const secondaryTabSubmitResponse: any = {\r\n          tab: {\r\n            type: \"continue\",\r\n            value: {\r\n              cards: [\r\n                { card: successCard.content },\r\n                { card: welcomeCard.content },\r\n                { card: interviewCard.content },\r\n                { card: videoPlayerCard.content },\r\n              ],\r\n            },\r\n          },\r\n        };\r\n\r\n        switch (ctx.activity.name) {\r\n          case \"task/fetch\":\r\n            responseBody = {\r\n              task: {\r\n                type: \"continue\",\r\n                value: {\r\n                  height: \"medium\",\r\n                  width: \"medium\",\r\n                  title: \"task\",\r\n                  card: videoPlayerCard,\r\n                },\r\n              },\r\n            };\r\n            break;\r\n          case \"task/submit\":\r\n            if (ctx.activity.value.tabContext.tabEntityId === \"workday\") {\r\n              responseBody = {\r\n                task: {\r\n                  type: \"continue\",\r\n                  value: primaryTabSubmitResponse,\r\n                },\r\n              };\r\n            } else {\r\n              responseBody = {\r\n                task: {\r\n                  type: \"continue\",\r\n                  value: secondaryTabSubmitResponse,\r\n                },\r\n              };\r\n            }\r\n            break;\r\n          case \"tab/submit\":\r\n            responseBody = primaryTabSubmitResponse;\r\n            break;\r\n          case \"tab/fetch\":\r\n          default:\r\n            if (ctx.activity.value.tabContext.tabEntityId === \"workday\") {\r\n              responseBody = primaryTabResponse;\r\n            } else {\r\n              responseBody = secondaryTabResponse;\r\n            }\r\n            break;\r\n        }\r\n        return { status: 200, body: responseBody };\r\n      },\r\n    };\r\n  }\r\n\r\n  /**\r\n   * The Bot Framework `onTurn` handler.\r\n   * The Microsoft Teams middleware for Bot Framework uses a custom activity processor (`TeamsActivityProcessor`)\r\n   * which is configured in the constructor of this sample\r\n   */\r\n  public async onTurn(context: TurnContext): Promise<any> {\r\n    // transfer the activity to the TeamsActivityProcessor\r\n    await this.activityProc.processIncomingActivity(context);\r\n  }\r\n\r\n  private async getUserProfile(aadObjectId: string): Promise<any> {\r\n    const authState: any = this.loggedInMemberOIDs.get(aadObjectId);\r\n    if (!authState) {\r\n      return false;\r\n    }\r\n    try {\r\n      const response = await fetch(\"https://graph.microsoft.com/v1.0/me/\", {\r\n        headers: {\r\n          Authorization: \"Bearer \" + authState.accessToken,\r\n        },\r\n      });\r\n\r\n      const profile = await response.json();\r\n      return profile.error == null ? profile : undefined;\r\n    } catch (error) {\r\n      log(\"Error fetching user profile from graph: \", error);\r\n    }\r\n  }\r\n}\r\n","import * as Express from \"express\";\r\nimport * as http from \"http\";\r\nimport * as path from \"path\";\r\nimport * as morgan from \"morgan\";\r\nimport { MsTeamsApiRouter, MsTeamsPageRouter } from \"express-msteams-host\";\r\nimport {\r\n  BotFrameworkAdapter,\r\n  ConversationState,\r\n  MemoryStorage,\r\n} from \"botbuilder\";\r\nimport * as debug from \"debug\";\r\nimport { renderFile } from \"ejs\";\r\nimport { AcPrototypeBot } from \"./acPrototypeBot/AcPrototypeBot\";\r\n\r\n// Initialize debug logging module\r\nconst log = debug(\"msteams\");\r\n\r\nlog(`Initializing Microsoft Teams Express hosted App...`);\r\n\r\n// Initialize dotenv, to use .env file settings if existing\r\n// tslint:disable-next-line:no-var-requires\r\nrequire(\"dotenv\").config();\r\n\r\n// The import of components has to be done AFTER the dotenv config\r\nimport * as allComponents from \"./TeamsAppsComponents\";\r\n\r\n// Create the Express webserver\r\nconst express = Express();\r\nconst port = process.env.port || process.env.PORT || 3007;\r\n\r\nconst adapter = new BotFrameworkAdapter({\r\n  appId: process.env.MICROSOFT_APP_ID,\r\n  appPassword: process.env.MICROSOFT_APP_PASSWORD,\r\n});\r\n\r\n// Catch-all for errors.\r\nadapter.onTurnError = async (context, error) => {\r\n  // This check writes out errors to console log .vs. app insights.\r\n  // NOTE: In production environment, you should consider logging this to Azure\r\n  //       application insights. See https://aka.ms/bottelemetry for telemetry\r\n  //       configuration instructions.\r\n  console.error(`\\n [onTurnError] unhandled error: ${error}`);\r\n\r\n  // Send a trace activity, which will be displayed in Bot Framework Emulator\r\n  await context.sendTraceActivity(\r\n    \"OnTurnError Trace\",\r\n    `${error}`,\r\n    \"https://www.botframework.com/schemas/error\",\r\n    \"TurnError\"\r\n  );\r\n\r\n  // Send a message to the user\r\n  await context.sendActivity(\"The bot encountered an error or bug.\");\r\n  await context.sendActivity(\r\n    \"To continue to run this bot, please fix the bot source code.\"\r\n  );\r\n  // Clear out state\r\n  await conversationState.delete(context);\r\n};\r\n\r\n// Define a state store for your bot. See https://aka.ms/about-bot-state to learn more about using MemoryStorage.\r\n// A bot requires a state store to persist the dialog and user state between messages.\r\n\r\n// For local development, in-memory storage is used.\r\n// CAUTION: The Memory Storage used here is for local bot debugging only. When the bot\r\n// is restarted, anything stored in memory will be gone.\r\nconst memoryStorage = new MemoryStorage();\r\nconst conversationState = new ConversationState(memoryStorage);\r\n\r\nconst bot = new AcPrototypeBot(memoryStorage, conversationState);\r\n\r\n// Inject the raw request body onto the request object\r\nexpress.use(\r\n  Express.json({\r\n    verify: (req, res, buf: Buffer, encoding: string): void => {\r\n      (req as any).rawBody = buf.toString();\r\n    },\r\n  })\r\n);\r\nexpress.use(Express.urlencoded({ extended: true }));\r\n\r\nexpress.engine(\"html\", renderFile);\r\nexpress.set(\"view engine\", \"ejs\");\r\n\r\n// Express configuration\r\nexpress.set(\"views\", path.join(__dirname, \"/\"));\r\n\r\n// Add simple logging\r\nexpress.use(morgan(\"tiny\"));\r\n\r\n// Listen for incoming requests.\r\nexpress.post(\"/api/messages\", (req, res) => {\r\n  adapter.processActivity(req, res, async (context) => {\r\n    await bot.onTurn(context);\r\n  });\r\n});\r\n\r\n// Add /scripts and /assets as static folders\r\nexpress.use(\"/scripts\", Express.static(path.join(__dirname, \"web/scripts\")));\r\nexpress.use(\"/assets\", Express.static(path.join(__dirname, \"web/assets\")));\r\n\r\nexpress.post(\"/acPrototypeTab/redirect.html\", (req, res) => {\r\n  const authResponse = req.body;\r\n  const state = Math.random().toString(); // _guid() is a helper function in the sample\r\n  console.dir(authResponse);\r\n  memoryStorage.write({\r\n    [state]: {\r\n      idToken: authResponse.id_token,\r\n      accessToken: authResponse.access_token,\r\n      tokenType: authResponse.token_type,\r\n      expiresIn: authResponse.expires_in,\r\n      scope: authResponse.scope,\r\n    },\r\n  });\r\n  res.render(path.join(__dirname, \"web/acPrototypeTab/redirect.ejs\"), {\r\n    state,\r\n    error: authResponse.error,\r\n  });\r\n});\r\n\r\n// routing for bots, connectors and incoming web hooks - based on the decorators\r\n// For more information see: https://www.npmjs.com/package/express-msteams-host\r\nexpress.use(MsTeamsApiRouter(allComponents));\r\n\r\n// routing for pages for tabs and connector configuration\r\n// For more information see: https://www.npmjs.com/package/express-msteams-host\r\nexpress.use(\r\n  MsTeamsPageRouter({\r\n    root: path.join(__dirname, \"web/\"),\r\n    components: allComponents,\r\n  })\r\n);\r\n\r\n// Set default web page\r\nexpress.use(\r\n  \"/\",\r\n  Express.static(path.join(__dirname, \"web/\"), {\r\n    index: \"index.html\",\r\n  })\r\n);\r\n\r\n// Set the port\r\nexpress.set(\"port\", port);\r\n\r\n// Start the webserver\r\nhttp.createServer(express).listen(port, () => {\r\n  log(`Server running on ${port}`);\r\n});\r\n","module.exports = require(\"express\");","module.exports = require(\"http\");","module.exports = require(\"path\");","module.exports = require(\"morgan\");","module.exports = require(\"ejs\");","module.exports = require(\"node-fetch\");","const WelcomeCard = require(\"./WelcomeCard.json\");\n\nexport default WelcomeCard;\n","const VideoPlayerCard = require(\"./VideoPlayerCard.json\");\r\n\r\nexport default VideoPlayerCard;\r\n","module.exports = require(\"botbuilder-teams\");","const AdminCard = require(\"./admin-config.json\");\r\n\r\nexport default AdminCard;\r\n","const QuickActionCard = require(\"./quick-actions.json\");\r\n\r\nexport default QuickActionCard;\r\n","// const ManagerDashboardCard = require(\"./manager-dashboard.json\");\r\n\r\nconst ManagerDashboardCard = (profile) => ({\r\n  type: \"AdaptiveCard\",\r\n  body: [\r\n    {\r\n      type: \"Container\",\r\n      bleed: true,\r\n      style: \"emphasis\",\r\n      items: [\r\n        {\r\n          type: \"TextBlock\",\r\n          text: \"Manager Dashboard | 3 employees\",\r\n          weight: \"Bolder\",\r\n          size: \"Medium\",\r\n        },\r\n      ],\r\n    },\r\n    {\r\n      type: \"ColumnSet\",\r\n      columns: [\r\n        {\r\n          type: \"Column\",\r\n          items: [\r\n            {\r\n              type: \"Image\",\r\n              style: \"Person\",\r\n              url: \"https://randomuser.me/api/portraits/women/32.jpg\",\r\n              size: \"Small\",\r\n            },\r\n          ],\r\n          width: \"auto\",\r\n        },\r\n        {\r\n          type: \"Column\",\r\n          items: [\r\n            {\r\n              type: \"TextBlock\",\r\n              weight: \"Bolder\",\r\n              text: (profile && profile.displayName) || \"\",\r\n              wrap: true,\r\n            },\r\n            {\r\n              type: \"TextBlock\",\r\n              spacing: \"None\",\r\n              text: \"🎉   5 year anniversary this week\",\r\n              isSubtle: true,\r\n              wrap: true,\r\n              fontType: \"Default\",\r\n              weight: \"Lighter\",\r\n            },\r\n          ],\r\n          width: \"stretch\",\r\n        },\r\n        {\r\n          type: \"Column\",\r\n          width: \"50px\",\r\n          items: [\r\n            {\r\n              type: \"ActionSet\",\r\n              actions: [\r\n                {\r\n                  type: \"Action.Submit\",\r\n                  title: \"...\",\r\n                },\r\n              ],\r\n            },\r\n          ],\r\n        },\r\n      ],\r\n      separator: true,\r\n      spacing: \"Small\",\r\n    },\r\n    {\r\n      type: \"ColumnSet\",\r\n      columns: [\r\n        {\r\n          type: \"Column\",\r\n          items: [\r\n            {\r\n              type: \"Image\",\r\n              style: \"Person\",\r\n              url: \"https://randomuser.me/api/portraits/women/36.jpg\",\r\n              size: \"Small\",\r\n            },\r\n          ],\r\n          width: \"auto\",\r\n        },\r\n        {\r\n          type: \"Column\",\r\n          items: [\r\n            {\r\n              type: \"TextBlock\",\r\n              weight: \"Bolder\",\r\n              wrap: true,\r\n              text: \"Alexa Edwards\",\r\n            },\r\n            {\r\n              type: \"TextBlock\",\r\n              spacing: \"None\",\r\n              text: \"📅  Upcoming time off: Mar 20-25, Apr 1\",\r\n              isSubtle: true,\r\n              weight: \"Lighter\",\r\n              fontType: \"Default\",\r\n            },\r\n          ],\r\n          width: \"stretch\",\r\n        },\r\n        {\r\n          type: \"Column\",\r\n          width: \"50px\",\r\n          items: [\r\n            {\r\n              type: \"ActionSet\",\r\n              actions: [\r\n                {\r\n                  type: \"Action.Submit\",\r\n                  title: \"...\",\r\n                },\r\n              ],\r\n            },\r\n          ],\r\n        },\r\n      ],\r\n      separator: true,\r\n      spacing: \"Medium\",\r\n    },\r\n    {\r\n      type: \"ColumnSet\",\r\n      columns: [\r\n        {\r\n          type: \"Column\",\r\n          items: [\r\n            {\r\n              type: \"Image\",\r\n              style: \"Person\",\r\n              url: \"https://randomuser.me/api/portraits/women/40.jpg\",\r\n              size: \"Small\",\r\n            },\r\n          ],\r\n          width: \"auto\",\r\n        },\r\n        {\r\n          type: \"Column\",\r\n          items: [\r\n            {\r\n              type: \"TextBlock\",\r\n              weight: \"Bolder\",\r\n              text: \"Yingdan Huang\",\r\n              wrap: true,\r\n            },\r\n            {\r\n              type: \"TextBlock\",\r\n              spacing: \"None\",\r\n              text: \"🎂  Birthday this week\",\r\n              isSubtle: true,\r\n              wrap: true,\r\n              weight: \"Lighter\",\r\n            },\r\n          ],\r\n          width: \"stretch\",\r\n        },\r\n        {\r\n          type: \"Column\",\r\n          width: \"50px\",\r\n          items: [\r\n            {\r\n              type: \"ActionSet\",\r\n              actions: [\r\n                {\r\n                  type: \"Action.Submit\",\r\n                  title: \"...\",\r\n                },\r\n              ],\r\n            },\r\n          ],\r\n        },\r\n      ],\r\n      separator: true,\r\n      spacing: \"Medium\",\r\n    },\r\n  ],\r\n  $schema: \"http://adaptivecards.io/schemas/adaptive-card.json\",\r\n  version: \"1.2\",\r\n});\r\n\r\nexport default ManagerDashboardCard;\r\n","const InterviewCandidatesCard = require(\"./interview-candidates.json\");\r\n\r\nexport default InterviewCandidatesCard;\r\n","const SuccessCard = require(\"./success-card.json\");\r\n\r\nexport default SuccessCard;\r\n","module.exports = require(\"dotenv\");","// Components will be added here\r\nexport const nonce = {}; // Do not remove!\r\n// Automatically added for the acPrototypeBot bot\r\nexport * from \"./acPrototypeBot/AcPrototypeBot\";\r\n"],"sourceRoot":""}